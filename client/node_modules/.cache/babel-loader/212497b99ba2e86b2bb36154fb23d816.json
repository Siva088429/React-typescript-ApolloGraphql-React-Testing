{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\MyFunnelChart.tsx\";\n// import React, { useEffect, useRef } from 'react';\n// const FunnelGraph = require('funnel-graph-js');\n\n// interface FunnelGraphProps {\n//     data: Array<{ name: string, value: number }>;\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const funnel = new FunnelGraph.default(containerRef.current, {\n//                 data,\n//                 height: 400,\n//                 width: 600,\n//                 direction: 'horizontal',\n//                 isStack: true\n//             });\n//             funnel.render();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} />;\n// };\n\n// export default MyFunnelChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport { FunnelGraph } from '@trutoo/funnel-graph';\nconst MyFunnelChart = _ref => {\n  let {\n    data\n  } = _ref;\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (containerRef.current) {\n      const myFunnelGraph = new FunnelGraph({\n        container: containerRef.current,\n        data: {\n          labels: data.labels,\n          subLabels: data.subLabels,\n          colors: data.colors,\n          values: data.values,\n          direction: 'horizontal',\n          isStack: true\n        }\n      });\n      myFunnelGraph.draw();\n    }\n  }, [data, containerRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"funnel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  });\n};\nexport default MyFunnelChart;\n``;","map":{"version":3,"names":["React","useEffect","useRef","FunnelGraph","MyFunnelChart","data","containerRef","current","myFunnelGraph","container","labels","subLabels","colors","values","direction","isStack","draw"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\r\n// const FunnelGraph = require('funnel-graph-js');\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: Array<{ name: string, value: number }>;\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const funnel = new FunnelGraph.default(containerRef.current, {\r\n//                 data,\r\n//                 height: 400,\r\n//                 width: 600,\r\n//                 direction: 'horizontal',\r\n//                 isStack: true\r\n//             });\r\n//             funnel.render();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { FunnelGraph } from '@trutoo/funnel-graph';\r\n\r\ninterface FunnelGraphProps {\r\n    data: {\r\n        labels: string[],\r\n        subLabels: string[][],\r\n        colors: (string[] | string)[][],\r\n        values: number[][]\r\n    };\r\n}\r\n\r\nconst MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (containerRef.current) {\r\n            const myFunnelGraph = new FunnelGraph({\r\n                container: containerRef.current,\r\n                data: {\r\n                    labels: data.labels,\r\n                    subLabels: data.subLabels,\r\n                    colors: data.colors,\r\n                    values: data.values,\r\n                    direction: 'horizontal',\r\n                    isStack: true\r\n                }\r\n            });\r\n            myFunnelGraph.draw();\r\n        }\r\n    }, [data, containerRef]);\r\n\r\n    return <div ref={containerRef} className=\"funnel\" />;\r\n};\r\n\r\nexport default MyFunnelChart;\r\n``\r\n\r\n\r\n"],"mappings":";AAAA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,sBAAsB;AAWlD,MAAMC,aAAyC,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACvD,MAAMC,YAAY,GAAGJ,MAAM,CAAiB,IAAI,CAAC;EACjDD,SAAS,CAAC,MAAM;IACZ,IAAIK,YAAY,CAACC,OAAO,EAAE;MACtB,MAAMC,aAAa,GAAG,IAAIL,WAAW,CAAC;QAClCM,SAAS,EAAEH,YAAY,CAACC,OAAO;QAC/BF,IAAI,EAAE;UACFK,MAAM,EAAEL,IAAI,CAACK,MAAM;UACnBC,SAAS,EAAEN,IAAI,CAACM,SAAS;UACzBC,MAAM,EAAEP,IAAI,CAACO,MAAM;UACnBC,MAAM,EAAER,IAAI,CAACQ,MAAM;UACnBC,SAAS,EAAE,YAAY;UACvBC,OAAO,EAAE;QACb;MACJ,CAAC,CAAC;MACFP,aAAa,CAACQ,IAAI,EAAE;IACxB;EACJ,CAAC,EAAE,CAACX,IAAI,EAAEC,YAAY,CAAC,CAAC;EAExB,oBAAO;IAAK,GAAG,EAAEA,YAAa;IAAC,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AACxD,CAAC;AAED,eAAeF,aAAa;AAC3B,EAAC"},"metadata":{},"sourceType":"module"}