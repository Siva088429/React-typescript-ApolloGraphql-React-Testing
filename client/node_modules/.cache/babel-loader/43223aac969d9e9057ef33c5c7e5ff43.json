{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\MyFunnelChart.tsx\";\n// import React, { useEffect, useRef } from 'react';\n// const FunnelGraph = require('funnel-graph-js');\n\n// interface FunnelGraphProps {\n//     data: Array<{ name: string, value: number }>;\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const funnel = new FunnelGraph.default(containerRef.current, {\n//                 data,\n//                 height: 400,\n//                 width: 600,\n//                 direction: 'horizontal',\n//                 isStack: true\n//             });\n//             funnel.render();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} />;\n// };\n\n// export default MyFunnelChart;\n\n// import React, { useEffect, useRef } from 'react';\n// import { FunnelGraph } from '@trutoo/funnel-graph';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         subLabels: string[][],\n//         colors: (string[] | string)[][],\n//         values: number[][]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph({\n//                 container: containerRef.current,\n//                 data: {\n//                     labels: data.labels,\n//                     subLabels: data.subLabels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal',\n//                     isStack: true\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// export default MyFunnelChart;\n// import React, { useEffect, useRef } from 'react';\n// // import { FunnelGraph } from 'funnel-graph-js';\n// const FunnelGraph = require('funnel-graph-js').default;\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         colors: string[],\n//         values: number[]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\n//                 data: {\n//                     labels: data.labels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal'\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// const data = {\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\n//     colors: ['orange', 'red'],\n//     values: [12000, 5700, 360],\n// };\n\n// const MyFunnelChart1 = () => {\n//   return (\n//     <div>\n//       <MyFunnelChart data={data} />\n//     </div>\n//   );\n// }\n\n// export default MyFunnelChart1;\n// import React, { useEffect, useRef } from 'react';\n// import { FunnelGraph } from 'funnel-graph-js';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         colors: string[],\n//         values: number[]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\n//                 data: {\n//                     labels: data.labels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal'\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// export default MyFunnelChart;\n\nimport React, { useState, useEffect } from 'react';\nimport FunnelGraphJs from 'funnel-graph-js';\nconst MyFunnelChart = () => {\n  const [data, setData] = useState({\n    labels: [],\n    colors: [],\n    values: []\n  });\n  useEffect(() => {\n    setData({\n      labels: ['Impressions', 'Add To Cart', 'Buy'],\n      colors: ['orange', 'red'],\n      values: [12000, 5700, 360]\n    });\n  }, []);\n  useEffect(() => {\n    const container = document.getElementById('funnel-container');\n    if (container) {\n      const funnelGraph = new FunnelGraphJs(container, {\n        data\n      });\n      funnelGraph.draw();\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"funnel-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }\n  });\n};\nexport default MyFunnelChart;","map":{"version":3,"names":["React","useState","useEffect","FunnelGraphJs","MyFunnelChart","data","setData","labels","colors","values","container","document","getElementById","funnelGraph","draw"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\r\n// const FunnelGraph = require('funnel-graph-js');\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: Array<{ name: string, value: number }>;\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const funnel = new FunnelGraph.default(containerRef.current, {\r\n//                 data,\r\n//                 height: 400,\r\n//                 width: 600,\r\n//                 direction: 'horizontal',\r\n//                 isStack: true\r\n//             });\r\n//             funnel.render();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { FunnelGraph } from '@trutoo/funnel-graph';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         subLabels: string[][],\r\n//         colors: (string[] | string)[][],\r\n//         values: number[][]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph({\r\n//                 container: containerRef.current,\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     subLabels: data.subLabels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal',\r\n//                     isStack: true\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n// import React, { useEffect, useRef } from 'react';\r\n// // import { FunnelGraph } from 'funnel-graph-js';\r\n// const FunnelGraph = require('funnel-graph-js').default;\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         colors: string[],\r\n//         values: number[]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal'\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// const data = {\r\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n//     colors: ['orange', 'red'],\r\n//     values: [12000, 5700, 360],\r\n// };\r\n\r\n// const MyFunnelChart1 = () => {\r\n//   return (\r\n//     <div>\r\n//       <MyFunnelChart data={data} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MyFunnelChart1;\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { FunnelGraph } from 'funnel-graph-js';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         colors: string[],\r\n//         values: number[]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal'\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport FunnelGraphJs from 'funnel-graph-js';\r\n\r\ninterface FunnelData {\r\n    labels: string[];\r\n    colors: string[];\r\n    values: number[];\r\n}\r\n\r\n\r\n\r\nconst MyFunnelChart: React.FC = () => {\r\n    const [data, setData] = useState<FunnelData>({\r\n        labels: [],\r\n        colors: [],\r\n        values: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        setData({\r\n            labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n            colors: ['orange', 'red'],\r\n            values: [12000, 5700, 360]\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const container = document.getElementById('funnel-container');\r\n        if (container) {\r\n            const funnelGraph = new FunnelGraphJs(container, { data });\r\n            funnelGraph.draw();\r\n        }\r\n    }, [data]);\r\n\r\n    return <div id=\"funnel-container\" />;\r\n};\r\n\r\nexport default MyFunnelChart;\r\n\r\n"],"mappings":";AAAA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAU3C,MAAMC,aAAuB,GAAG,MAAM;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAa;IACzCM,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEFP,SAAS,CAAC,MAAM;IACZI,OAAO,CAAC;MACJC,MAAM,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;MAC7CC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;MACzBC,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAC7D,IAAIF,SAAS,EAAE;MACX,MAAMG,WAAW,GAAG,IAAIV,aAAa,CAACO,SAAS,EAAE;QAAEL;MAAK,CAAC,CAAC;MAC1DQ,WAAW,CAACC,IAAI,EAAE;IACtB;EACJ,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,oBAAO;IAAK,EAAE,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AACxC,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}