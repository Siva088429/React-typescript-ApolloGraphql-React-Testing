{"ast":null,"code":"import*as React from\"react\";import{useQuery}from\"react-apollo\";import{ContactListQuery}from\"../../graphql/queries/contact.queries\";import ErrorMessage from\"../common/error.message\";import Loading from\"../common/loading\";var ContactList=function ContactList(props){var _useQuery=useQuery(ContactListQuery),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;// const detailContactMutation = useQuery<IContact>(ContactDetailtQuery, { variables: { id: id }});\n// console.log(`data=>contacts: ${JSON.stringify(data?.contacts)}`)\nif(loading)return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Loading,null));if(error||!data)return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorMessage,{error:error}));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h6\",null,\"Contact list\"),/*#__PURE__*/React.createElement(\"div\",{className:\"table-responsive\"},/*#__PURE__*/React.createElement(\"table\",{className:\"table table-striped table-sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Email\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date of birth\"),/*#__PURE__*/React.createElement(\"th\",null,\"Actions\"))),/*#__PURE__*/React.createElement(\"tbody\",null,data&&data.contacts&&data.contacts.length>0&&data.contacts.map(function(item,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,item.id),/*#__PURE__*/React.createElement(\"td\",null,item.name),/*#__PURE__*/React.createElement(\"td\",null,item.email),/*#__PURE__*/React.createElement(\"td\",null,item.dateOfBirth),/*#__PURE__*/React.createElement(\"th\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-edit\",onClick:props.handleEdit(item.id),style:{color:'##0d903c',cursor:'pointer'}},\"\\xA0\"),\" | \",/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-trash\",onClick:props.handleDelete(item.id),style:{color:'red',cursor:'pointer'}},\"\\xA0\"))));})))));};// export const ContactListAsQuery: React.FC<IOwnProps> = (props) => {\n//   return (\n//     <>\n//       <h6>Contact list</h6>\n//       <Query<IData> query={ContactListQuery}>\n//       {\n//         ({loading, error, data}) => {\n//           if (loading) return <>\"Loading...\"</>\n//           if (error || !data) return <>`Error!`</>\n//           return (\n//             <>\n//             <div className=\"table-responsive\">\n//               <table className=\"table table-striped table-sm\">\n//                 <thead>\n//                   <tr>\n//                     <th>#</th>\n//                     <th>Name</th>\n//                     <th>Email</th>\n//                     <th>Date of birth</th>\n//                     <th>Actions</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {data && data.contacts &&\n//                     data.contacts.length > 0 &&\n//                     data.contacts.map((item, index) => {\n//                       return (\n//                         <React.Fragment key={index}>\n//                           <tr>\n//                             <td>{item.id}</td>\n//                             <td>{item.name}</td>\n//                             <td>{item.email}</td>\n//                             <td>{item.dateOfBirth}</td>\n//                             <th>\n//                               <i className=\"fa fa-edit\" onClick={props.handleEdit(item.id)} style={{color: '##0d903c', cursor: 'pointer'}}>&nbsp;</i> | <i className=\"fa fa-trash\" onClick={props.handleDelete(item.id)} style={{color: 'red', cursor: 'pointer'}}>&nbsp;</i>\n//                               </th>\n//                           </tr>\n//                         </React.Fragment>\n//                       );\n//                     })}\n//                 </tbody>\n//               </table>\n//             </div>\n//             </>\n//           )\n//         }\n//       }\n//       </Query>\n//     </>\n//   );\n// };\nexport default ContactList;","map":{"version":3,"names":["React","useQuery","ContactListQuery","ErrorMessage","Loading","ContactList","props","loading","error","data","contacts","length","map","item","index","id","name","email","dateOfBirth","handleEdit","color","cursor","handleDelete"],"sources":["C:/Users/akula.s/Downloads/react-typescript-graphql-master (1)/react-typescript-graphql-master/client/src/components/contact/contact.list.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { IContact } from \"../../models/contact\";\r\nimport { ContactListQuery } from \"../../graphql/queries/contact.queries\";\r\nimport ErrorMessage from \"../common/error.message\";\r\nimport Loading from \"../common/loading\";\r\n\r\n\r\ninterface IOwnProps {\r\n handleDelete: (id: number) => (e: React.MouseEvent) => void;\r\n handleEdit: (id: number) => (e: React.MouseEvent) =>  void;\r\n}\r\n\r\ninterface IData {\r\n  contacts: IContact[];\r\n}\r\n\r\nconst ContactList: React.FC<IOwnProps> = (props) => {\r\n  const { loading, error, data } = useQuery<IData>(ContactListQuery)\r\n  // const detailContactMutation = useQuery<IContact>(ContactDetailtQuery, { variables: { id: id }});\r\n  // console.log(`data=>contacts: ${JSON.stringify(data?.contacts)}`)\r\n  \r\n  if (loading) return <><Loading /></>\r\n  if (error || !data) return <><ErrorMessage error={error} /></>\r\n\r\n  return (\r\n    <>\r\n      <h6>Contact list</h6>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Date of birth</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data && data.contacts &&\r\n              data.contacts.length > 0 &&\r\n              data.contacts.map((item: any, index: any) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <tr>\r\n                      <td>{item.id}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.dateOfBirth}</td>\r\n                      <th>\r\n                        <i className=\"fa fa-edit\" onClick={props.handleEdit(item.id)} style={{color: '##0d903c', cursor: 'pointer'}}>&nbsp;</i> | <i className=\"fa fa-trash\" onClick={props.handleDelete(item.id)} style={{color: 'red', cursor: 'pointer'}}>&nbsp;</i>\r\n                      </th>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// export const ContactListAsQuery: React.FC<IOwnProps> = (props) => {\r\n//   return (\r\n//     <>\r\n//       <h6>Contact list</h6>\r\n\r\n//       <Query<IData> query={ContactListQuery}>\r\n//       {\r\n//         ({loading, error, data}) => {\r\n//           if (loading) return <>\"Loading...\"</>\r\n//           if (error || !data) return <>`Error!`</>\r\n\r\n//           return (\r\n//             <>\r\n//             <div className=\"table-responsive\">\r\n//               <table className=\"table table-striped table-sm\">\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>#</th>\r\n//                     <th>Name</th>\r\n//                     <th>Email</th>\r\n//                     <th>Date of birth</th>\r\n//                     <th>Actions</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {data && data.contacts &&\r\n//                     data.contacts.length > 0 &&\r\n//                     data.contacts.map((item, index) => {\r\n//                       return (\r\n//                         <React.Fragment key={index}>\r\n//                           <tr>\r\n//                             <td>{item.id}</td>\r\n//                             <td>{item.name}</td>\r\n//                             <td>{item.email}</td>\r\n//                             <td>{item.dateOfBirth}</td>\r\n//                             <th>\r\n//                               <i className=\"fa fa-edit\" onClick={props.handleEdit(item.id)} style={{color: '##0d903c', cursor: 'pointer'}}>&nbsp;</i> | <i className=\"fa fa-trash\" onClick={props.handleDelete(item.id)} style={{color: 'red', cursor: 'pointer'}}>&nbsp;</i>\r\n//                               </th>\r\n//                           </tr>\r\n//                         </React.Fragment>\r\n//                       );\r\n//                     })}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//             </>\r\n//           )\r\n//         }\r\n//       }\r\n//       </Query>\r\n\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport default ContactList;\r\n"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAC9B,OAASC,QAAQ,KAAQ,cAAc,CAEvC,OAASC,gBAAgB,KAAQ,uCAAuC,CACxE,MAAOC,aAAY,KAAM,yBAAyB,CAClD,MAAOC,QAAO,KAAM,mBAAmB,CAYvC,GAAMC,YAAgC,CAAG,QAAnCA,YAAgC,CAAIC,KAAK,CAAK,CAClD,cAAiCL,QAAQ,CAAQC,gBAAgB,CAAC,CAA1DK,OAAO,WAAPA,OAAO,CAAEC,KAAK,WAALA,KAAK,CAAEC,IAAI,WAAJA,IAAI,CAC5B;AACA;AAEA,GAAIF,OAAO,CAAE,mBAAO,qDAAE,oBAAC,OAAO,MAAG,CAAG,CACpC,GAAIC,KAAK,EAAI,CAACC,IAAI,CAAE,mBAAO,qDAAE,oBAAC,YAAY,EAAC,KAAK,CAAED,KAAM,EAAG,CAAG,CAE9D,mBACE,qDACE,8BAAI,cAAY,CAAK,cAErB,2BAAK,SAAS,CAAC,kBAAkB,eAC/B,6BAAO,SAAS,CAAC,8BAA8B,eAC7C,8CACE,2CACE,8BAAI,GAAC,CAAK,cACV,8BAAI,MAAI,CAAK,cACb,8BAAI,OAAK,CAAK,cACd,8BAAI,eAAa,CAAK,cACtB,8BAAI,SAAO,CAAK,CACb,CACC,cACR,iCACGC,IAAI,EAAIA,IAAI,CAACC,QAAQ,EACpBD,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAG,CAAC,EACxBF,IAAI,CAACC,QAAQ,CAACE,GAAG,CAAC,SAACC,IAAS,CAAEC,KAAU,CAAK,CAC3C,mBACE,oBAAC,KAAK,CAAC,QAAQ,EAAC,GAAG,CAAEA,KAAM,eACzB,2CACE,8BAAKD,IAAI,CAACE,EAAE,CAAM,cAClB,8BAAKF,IAAI,CAACG,IAAI,CAAM,cACpB,8BAAKH,IAAI,CAACI,KAAK,CAAM,cACrB,8BAAKJ,IAAI,CAACK,WAAW,CAAM,cAC3B,2CACE,yBAAG,SAAS,CAAC,YAAY,CAAC,OAAO,CAAEZ,KAAK,CAACa,UAAU,CAACN,IAAI,CAACE,EAAE,CAAE,CAAC,KAAK,CAAE,CAACK,KAAK,CAAE,UAAU,CAAEC,MAAM,CAAE,SAAS,CAAE,EAAC,MAAM,CAAI,MAAG,uCAAG,SAAS,CAAC,aAAa,CAAC,OAAO,CAAEf,KAAK,CAACgB,YAAY,CAACT,IAAI,CAACE,EAAE,CAAE,CAAC,KAAK,CAAE,CAACK,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,SAAS,CAAE,EAAC,MAAM,CAAI,CAC5O,CACF,CACU,CAErB,CAAC,CAAC,CACE,CACF,CACJ,CACL,CAEP,CAAC,CAGD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,cAAehB,YAAW"},"metadata":{},"sourceType":"module"}