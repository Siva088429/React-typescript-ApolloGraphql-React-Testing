{"ast":null,"code":"// const MyFunnelChart: React.FC<Props> = ({data}) => {\n//   const containerRef = useRef(null);\n\n//   const options = {\n//     width: 600,\n//     height: 400,\n//     bottomWidth: 1 / 3,\n//     bottomPinch: 1 / 3,\n//     isCurved: true,\n//     curveHeight: 20,\n//     fillType: 'solid',\n//     isInverted: false,\n//   };\n\n//   React.useEffect(() => {\n//     if (containerRef.current) {\n//       const chart = new FunnelGraph(containerRef.current, data, options);\n//       chart.draw();\n//     }\n//   }, [data]);\n\n//   return <div ref={containerRef} />;\n// };\n\nexport default MyFunnelChart;","map":{"version":3,"names":["MyFunnelChart"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport FunnelGraph from 'funnel-graph-js';\r\n\r\n\r\n\r\ninterface Props {\r\n  data: {label:string,value:number}[];\r\n}\r\n\r\n// const MyFunnelChart: React.FC<Props> = ({data}) => {\r\n//   const containerRef = useRef(null);\r\n\r\n//   const options = {\r\n//     width: 600,\r\n//     height: 400,\r\n//     bottomWidth: 1 / 3,\r\n//     bottomPinch: 1 / 3,\r\n//     isCurved: true,\r\n//     curveHeight: 20,\r\n//     fillType: 'solid',\r\n//     isInverted: false,\r\n//   };\r\n\r\n//   React.useEffect(() => {\r\n//     if (containerRef.current) {\r\n//       const chart = new FunnelGraph(containerRef.current, data, options);\r\n//       chart.draw();\r\n//     }\r\n//   }, [data]);\r\n\r\n//   return <div ref={containerRef} />;\r\n// };\r\n\r\nexport default MyFunnelChart;\r\n"],"mappings":"AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAeA,aAAa"},"metadata":{},"sourceType":"module"}