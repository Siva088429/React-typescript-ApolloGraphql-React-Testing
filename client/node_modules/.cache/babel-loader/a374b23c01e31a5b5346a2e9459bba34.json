{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\MyFunnelChart.tsx\";\n// import React, { useEffect, useRef } from 'react';\n// const FunnelGraph = require('funnel-graph-js');\n\n// interface FunnelGraphProps {\n//     data: Array<{ name: string, value: number }>;\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const funnel = new FunnelGraph.default(containerRef.current, {\n//                 data,\n//                 height: 400,\n//                 width: 600,\n//                 direction: 'horizontal',\n//                 isStack: true\n//             });\n//             funnel.render();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} />;\n// };\n\n// export default MyFunnelChart;\n\n// import React, { useEffect, useRef } from 'react';\n// import { FunnelGraph } from '@trutoo/funnel-graph';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         subLabels: string[][],\n//         colors: (string[] | string)[][],\n//         values: number[][]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph({\n//                 container: containerRef.current,\n//                 data: {\n//                     labels: data.labels,\n//                     subLabels: data.subLabels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal',\n//                     isStack: true\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// export default MyFunnelChart;\nimport React, { useEffect, useRef } from 'react';\nimport { FunnelGraph } from 'funnel-graph-js';\nconst MyFunnelChart = _ref => {\n  let {\n    data\n  } = _ref;\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (containerRef.current) {\n      const myFunnelGraph = new FunnelGraph(containerRef.current, {\n        data: {\n          labels: data.labels,\n          colors: data.colors,\n          values: data.values,\n          direction: 'horizontal'\n        }\n      });\n      myFunnelGraph.draw();\n    }\n  }, [data, containerRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"funnel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  });\n};\nconst data = {\n  labels: ['Impressions', 'Add To Cart', 'Buy'],\n  colors: ['orange', 'red'],\n  values: [12000, 5700, 360]\n};\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyFunnelChart, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useRef","FunnelGraph","MyFunnelChart","data","containerRef","current","myFunnelGraph","labels","colors","values","direction","draw","App"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\r\n// const FunnelGraph = require('funnel-graph-js');\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: Array<{ name: string, value: number }>;\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const funnel = new FunnelGraph.default(containerRef.current, {\r\n//                 data,\r\n//                 height: 400,\r\n//                 width: 600,\r\n//                 direction: 'horizontal',\r\n//                 isStack: true\r\n//             });\r\n//             funnel.render();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { FunnelGraph } from '@trutoo/funnel-graph';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         subLabels: string[][],\r\n//         colors: (string[] | string)[][],\r\n//         values: number[][]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph({\r\n//                 container: containerRef.current,\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     subLabels: data.subLabels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal',\r\n//                     isStack: true\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { FunnelGraph } from 'funnel-graph-js';\r\n\r\ninterface FunnelGraphProps {\r\n    data: {\r\n        labels: string[],\r\n        colors: string[],\r\n        values: number[]\r\n    };\r\n}\r\n\r\nconst MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (containerRef.current) {\r\n            const myFunnelGraph = new FunnelGraph(containerRef.current, {\r\n                data: {\r\n                    labels: data.labels,\r\n                    colors: data.colors,\r\n                    values: data.values,\r\n                    direction: 'horizontal'\r\n                }\r\n            });\r\n            myFunnelGraph.draw();\r\n        }\r\n    }, [data, containerRef]);\r\n\r\n    return <div ref={containerRef} className=\"funnel\" />;\r\n};\r\n\r\nconst data = {\r\n    labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n    colors: ['orange', 'red'],\r\n    values: [12000, 5700, 360],\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <MyFunnelChart data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,iBAAiB;AAU7C,MAAMC,aAAyC,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACvD,MAAMC,YAAY,GAAGJ,MAAM,CAAiB,IAAI,CAAC;EACjDD,SAAS,CAAC,MAAM;IACZ,IAAIK,YAAY,CAACC,OAAO,EAAE;MACtB,MAAMC,aAAa,GAAG,IAAIL,WAAW,CAACG,YAAY,CAACC,OAAO,EAAE;QACxDF,IAAI,EAAE;UACFI,MAAM,EAAEJ,IAAI,CAACI,MAAM;UACnBC,MAAM,EAAEL,IAAI,CAACK,MAAM;UACnBC,MAAM,EAAEN,IAAI,CAACM,MAAM;UACnBC,SAAS,EAAE;QACf;MACJ,CAAC,CAAC;MACFJ,aAAa,CAACK,IAAI,EAAE;IACxB;EACJ,CAAC,EAAE,CAACR,IAAI,EAAEC,YAAY,CAAC,CAAC;EAExB,oBAAO;IAAK,GAAG,EAAEA,YAAa;IAAC,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AACxD,CAAC;AAED,MAAMD,IAAI,GAAG;EACTI,MAAM,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;EAC7CC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;EACzBC,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG;AAC7B,CAAC;AAED,MAAMG,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAa;IAAC,IAAI,EAAET,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzB;AAEV,CAAC;AAED,eAAeS,GAAG"},"metadata":{},"sourceType":"module"}