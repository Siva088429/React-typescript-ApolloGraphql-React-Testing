{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\MyFunnelChart.tsx\";\n// import React from 'react'\n// import FunnelGraph from 'funnel-graph-js';\n\n// export const MyFunnelChart = () => {\n//   return (\n//     <div>\n//       var graph = new FunnelGraph({\n//       container: '.funnel',\n//       gradientDirection: 'horizontal',\n//       data: {...},\n//       displayPercent: true,\n//       direction: 'horizontal'\n//   });\n\n//   graph.draw();\n//   data: {\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\n//     subLabels: ['Direct', 'Social Media', 'Ads'],\n//     colors: [\n//         ['#FFB178', '#FF78B1', '#FF3C8E'],\n//         'red',\n//         ['blue']\n//     ],\n//     values: [\n//         [2000, 4000, 6000],\n//         [3000, 1000, 1700],\n//         [200, 30, 130]\n//     ]\n// }</div>\n//   )\n// }\n\n// const MyFunnelChart: React.FC = () => {\n//     const containerRef = useRef(null);\n\n//     const data = {\n//         labels: ['Impressions', 'Add To Cart', 'Buy'],\n//         subLabels: ['Direct', 'Social Media', 'Ads'],\n//         colors: [\n//             ['#FFB178', '#FF78B1', '#FF3C8E'],\n//             'red',\n//             ['blue']\n//         ],\n//         values: [\n//             [2000, 4000, 6000],\n//             [3000, 1000, 1700],\n//             [200, 30, 130]\n//         ]\n//     };\n\n//     const options = {\n//         // other options you want to set\n//     };\n\n//     const graph = new FunnelGraphJS(containerRef.current, data, options);\n\n//     return <div ref={containerRef} />;\n// }\n\nimport React, { useEffect, useRef } from 'react';\nimport FunnelGraphJS from 'funnel-graph-js';\nconst MyFunnelChart = () => {\n  const containerRef = useRef(null);\n  const data = {\n    labels: ['Impressions', 'Add To Cart', 'Buy'],\n    subLabels: ['Direct', 'Social Media', 'Ads'],\n    colors: [['#FFB178', '#FF78B1', '#FF3C8E'], 'red', ['blue']],\n    values: [[2000, 4000, 6000], [3000, 1000, 1700], [200, 30, 130]]\n  };\n  const options = {\n    // other options you want to set\n  };\n  useEffect(() => {\n    console.log(data);\n    if (containerRef.current) {\n      const graph = new FunnelGraphJS(containerRef.current, data, options);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  });\n};\nexport default MyFunnelChart;","map":{"version":3,"names":["React","useEffect","useRef","FunnelGraphJS","MyFunnelChart","containerRef","data","labels","subLabels","colors","values","options","console","log","current","graph"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["// import React from 'react'\r\n// import FunnelGraph from 'funnel-graph-js';\r\n\r\n\r\n\r\n// export const MyFunnelChart = () => {\r\n//   return (\r\n//     <div>\r\n//       var graph = new FunnelGraph({\r\n//       container: '.funnel',\r\n//       gradientDirection: 'horizontal',\r\n//       data: {...},\r\n//       displayPercent: true,\r\n//       direction: 'horizontal'\r\n//   });\r\n\r\n//   graph.draw();\r\n//   data: {\r\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n//     subLabels: ['Direct', 'Social Media', 'Ads'],\r\n//     colors: [\r\n//         ['#FFB178', '#FF78B1', '#FF3C8E'],\r\n//         'red',\r\n//         ['blue']\r\n//     ],\r\n//     values: [\r\n//         [2000, 4000, 6000],\r\n//         [3000, 1000, 1700],\r\n//         [200, 30, 130]\r\n//     ]\r\n// }</div>\r\n//   )\r\n// }\r\n\r\n\r\n// const MyFunnelChart: React.FC = () => {\r\n//     const containerRef = useRef(null);\r\n\r\n//     const data = {\r\n//         labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n//         subLabels: ['Direct', 'Social Media', 'Ads'],\r\n//         colors: [\r\n//             ['#FFB178', '#FF78B1', '#FF3C8E'],\r\n//             'red',\r\n//             ['blue']\r\n//         ],\r\n//         values: [\r\n//             [2000, 4000, 6000],\r\n//             [3000, 1000, 1700],\r\n//             [200, 30, 130]\r\n//         ]\r\n//     };\r\n\r\n//     const options = {\r\n//         // other options you want to set\r\n//     };\r\n\r\n//     const graph = new FunnelGraphJS(containerRef.current, data, options);\r\n\r\n//     return <div ref={containerRef} />;\r\n// }\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport FunnelGraphJS from 'funnel-graph-js';\r\n\r\n\r\nconst MyFunnelChart: React.FC = () => {\r\n  const containerRef = useRef(null);\r\n\r\n  const data = {\r\n      labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n      subLabels: ['Direct', 'Social Media', 'Ads'],\r\n      colors: [\r\n          ['#FFB178', '#FF78B1', '#FF3C8E'],\r\n          'red',\r\n          ['blue']\r\n      ],\r\n      values: [\r\n          [2000, 4000, 6000],\r\n          [3000, 1000, 1700],\r\n          [200, 30, 130]\r\n      ]\r\n  };\r\n\r\n  const options = {\r\n      // other options you want to set\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n    if(containerRef.current) {\r\n      const graph = new FunnelGraphJS(containerRef.current, data, options);\r\n    }\r\n  }, []);\r\n \r\n  return <div ref={containerRef} />;\r\n}\r\n\r\nexport default MyFunnelChart;\r\n\r\n"],"mappings":";AAAA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,aAAa,MAAM,iBAAiB;AAG3C,MAAMC,aAAuB,GAAG,MAAM;EACpC,MAAMC,YAAY,GAAGH,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMI,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;IAC7CC,SAAS,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,KAAK,CAAC;IAC5CC,MAAM,EAAE,CACJ,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EACjC,KAAK,EACL,CAAC,MAAM,CAAC,CACX;IACDC,MAAM,EAAE,CACJ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAEtB,CAAC;EAED,MAAMC,OAAO,GAAG;IACZ;EAAA,CACH;EAEDV,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjB,IAAGD,YAAY,CAACS,OAAO,EAAE;MACvB,MAAMC,KAAK,GAAG,IAAIZ,aAAa,CAACE,YAAY,CAACS,OAAO,EAAER,IAAI,EAAEK,OAAO,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAK,GAAG,EAAEN,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AACnC,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}