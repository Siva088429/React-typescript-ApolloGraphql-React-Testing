{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\MyFunnelChart.tsx\";\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\nimport FunnelGraph from 'funnel-graph-js';\nexport default class MyFunnelChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: 'Step 1',\n        value: 100\n      }, {\n        label: 'Step 2',\n        value: 80\n      }, {\n        label: 'Step 3',\n        value: 60\n      }, {\n        label: 'Step 4',\n        value: 40\n      }, {\n        label: 'Step 5',\n        value: 20\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FunnelGraph, {\n      data: this.state.data,\n      color: '#ff0000',\n      width: 300,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\n// import React, { useEffect, useRef } from 'react';\n// const FunnelGraph = require('funnel-graph-js');\n\n// interface FunnelGraphProps {\n//     data: Array<{ name: string, value: number }>;\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const funnel = new FunnelGraph.default(containerRef.current, {\n//                 data,\n//                 height: 400,\n//                 width: 600,\n//                 direction: 'horizontal',\n//                 isStack: true\n//             });\n//             funnel.render();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} />;\n// };\n\n// export default MyFunnelChart;\n\n// import React, { useEffect, useRef } from 'react';\n// import { FunnelGraph } from '@trutoo/funnel-graph';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         subLabels: string[][],\n//         colors: (string[] | string)[][],\n//         values: number[][]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph({\n//                 container: containerRef.current,\n//                 data: {\n//                     labels: data.labels,\n//                     subLabels: data.subLabels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal',\n//                     isStack: true\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// export default MyFunnelChart;\n// import React, { useEffect, useRef } from 'react';\n// // import { FunnelGraph } from 'funnel-graph-js';\n// const FunnelGraph = require('funnel-graph-js').default;\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         colors: string[],\n//         values: number[]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\n//                 data: {\n//                     labels: data.labels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal'\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// const data = {\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\n//     colors: ['orange', 'red'],\n//     values: [12000, 5700, 360],\n// };\n\n// const MyFunnelChart1 = () => {\n//   return (\n//     <div>\n//       <MyFunnelChart data={data} />\n//     </div>\n//   );\n// }\n\n// export default MyFunnelChart1;\n// import React, { useEffect, useRef } from 'react';\n// import { FunnelGraph } from 'funnel-graph-js';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         colors: string[],\n//         values: number[]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     useEffect(() => {\n//         if (containerRef.current) {\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\n//                 data: {\n//                     labels: data.labels,\n//                     colors: data.colors,\n//                     values: data.values,\n//                     direction: 'horizontal'\n//                 }\n//             });\n//             myFunnelGraph.draw();\n//         }\n//     }, [data, containerRef]);\n\n//     return <div ref={containerRef} className=\"funnel\" />;\n// };\n\n// export default MyFunnelChart;\n\n// import React, { useState, useEffect } from 'react';\n// import FunnelGraphJs from 'funnel-graph-js';\n\n// interface FunnelData {\n//     labels: string[];\n//     colors: string[];\n//     values: number[];\n// }\n\n// const data = {\n//   items: [\n//       {\n//           label: 'Impressions',\n//           value: 12000,\n//           color: 'orange'\n//       },\n//       {\n//           label: 'Add To Cart',\n//           value: 5700,\n//           color: 'red'\n//       },\n//       {\n//           label: 'Buy',\n//           value: 360,\n//           color: 'blue'\n//       }\n//   ]\n// };\n\n// const MyFunnelChart: React.FC = () => {\n//     const [data, setData] = useState<FunnelData>({\n//         labels: [],\n//         colors: [],\n//         values: []\n//     });\n\n//     useEffect(() => {\n//         setData({\n//             labels: ['Impressions', 'Add To Cart', 'Buy'],\n//             colors: ['orange', 'red'],\n//             values: [12000, 5700, 360]\n//         });\n//     }, []);\n\n//     useEffect(() => {\n//         const container = document.getElementById('funnel-container');\n//         if (container) {\n//             const funnelGraph = new FunnelGraphJs(container, { data });\n//             funnelGraph.draw();\n//         }\n//     }, [data]);\n\n//     return <div id=\"funnel-container\" />;\n// };\n\n// export default MyFunnelChart;\n// import React, { useState, useEffect } from 'react';\n// import Funnel from 'react-d3-funnel';\n\n// interface FunnelGraphProps {\n//     data: {\n//         labels: string[],\n//         values: number[]\n//     };\n// }\n\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\n//     const [chartData, setChartData] = useState([]);\n\n//     useEffect(() => {\n//         setChartData(\n//             data.labels.map((label, index) => {\n//                 return { label, value: data.values[index] };\n//             })\n//         );\n//     }, [data]);\n\n//     return <Funnel data={chartData} width={500} height={500} />;\n// };\n\n// export default MyFunnelChart;","map":{"version":3,"names":["React","Component","View","FunnelGraph","MyFunnelChart","constructor","props","state","data","label","value","render"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/MyFunnelChart.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport FunnelGraph from 'funnel-graph-js';\r\n\r\n\r\ninterface MyComponentProps {\r\n  data: Array<{ label: string, value: number }>;\r\n}\r\n\r\n\r\nexport default class MyFunnelChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { label: 'Step 1', value: 100 },\r\n        { label: 'Step 2', value: 80 },\r\n        { label: 'Step 3', value: 60 },\r\n        { label: 'Step 4', value: 40 },\r\n        { label: 'Step 5', value: 20 }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <FunnelGraph \r\n          data={this.state.data}\r\n          color={'#ff0000'}\r\n          width={300}\r\n          height={400}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// const FunnelGraph = require('funnel-graph-js');\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: Array<{ name: string, value: number }>;\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const funnel = new FunnelGraph.default(containerRef.current, {\r\n//                 data,\r\n//                 height: 400,\r\n//                 width: 600,\r\n//                 direction: 'horizontal',\r\n//                 isStack: true\r\n//             });\r\n//             funnel.render();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { FunnelGraph } from '@trutoo/funnel-graph';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         subLabels: string[][],\r\n//         colors: (string[] | string)[][],\r\n//         values: number[][]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph({\r\n//                 container: containerRef.current,\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     subLabels: data.subLabels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal',\r\n//                     isStack: true\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n// import React, { useEffect, useRef } from 'react';\r\n// // import { FunnelGraph } from 'funnel-graph-js';\r\n// const FunnelGraph = require('funnel-graph-js').default;\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         colors: string[],\r\n//         values: number[]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal'\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// const data = {\r\n//     labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n//     colors: ['orange', 'red'],\r\n//     values: [12000, 5700, 360],\r\n// };\r\n\r\n// const MyFunnelChart1 = () => {\r\n//   return (\r\n//     <div>\r\n//       <MyFunnelChart data={data} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MyFunnelChart1;\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { FunnelGraph } from 'funnel-graph-js';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         colors: string[],\r\n//         values: number[]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     useEffect(() => {\r\n//         if (containerRef.current) {\r\n//             const myFunnelGraph = new FunnelGraph(containerRef.current, {\r\n//                 data: {\r\n//                     labels: data.labels,\r\n//                     colors: data.colors,\r\n//                     values: data.values,\r\n//                     direction: 'horizontal'\r\n//                 }\r\n//             });\r\n//             myFunnelGraph.draw();\r\n//         }\r\n//     }, [data, containerRef]);\r\n\r\n//     return <div ref={containerRef} className=\"funnel\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import FunnelGraphJs from 'funnel-graph-js';\r\n\r\n// interface FunnelData {\r\n//     labels: string[];\r\n//     colors: string[];\r\n//     values: number[];\r\n// }\r\n\r\n// const data = {\r\n//   items: [\r\n//       {\r\n//           label: 'Impressions',\r\n//           value: 12000,\r\n//           color: 'orange'\r\n//       },\r\n//       {\r\n//           label: 'Add To Cart',\r\n//           value: 5700,\r\n//           color: 'red'\r\n//       },\r\n//       {\r\n//           label: 'Buy',\r\n//           value: 360,\r\n//           color: 'blue'\r\n//       }\r\n//   ]\r\n// };\r\n\r\n\r\n\r\n// const MyFunnelChart: React.FC = () => {\r\n//     const [data, setData] = useState<FunnelData>({\r\n//         labels: [],\r\n//         colors: [],\r\n//         values: []\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         setData({\r\n//             labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n//             colors: ['orange', 'red'],\r\n//             values: [12000, 5700, 360]\r\n//         });\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const container = document.getElementById('funnel-container');\r\n//         if (container) {\r\n//             const funnelGraph = new FunnelGraphJs(container, { data });\r\n//             funnelGraph.draw();\r\n//         }\r\n//     }, [data]);\r\n\r\n//     return <div id=\"funnel-container\" />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n// import React, { useState, useEffect } from 'react';\r\n// import Funnel from 'react-d3-funnel';\r\n\r\n// interface FunnelGraphProps {\r\n//     data: {\r\n//         labels: string[],\r\n//         values: number[]\r\n//     };\r\n// }\r\n\r\n// const MyFunnelChart: React.FC<FunnelGraphProps> = ({ data }) => {\r\n//     const [chartData, setChartData] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         setChartData(\r\n//             data.labels.map((label, index) => {\r\n//                 return { label, value: data.values[index] };\r\n//             })\r\n//         );\r\n//     }, [data]);\r\n\r\n//     return <Funnel data={chartData} width={500} height={500} />;\r\n// };\r\n\r\n// export default MyFunnelChart;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,WAAW,MAAM,iBAAiB;AAQzC,eAAe,MAAMC,aAAa,SAASH,SAAS,CAAC;EACnDI,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE,CACJ;QAAEC,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC/B;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG,CAAC,EAC9B;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG,CAAC,EAC9B;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG,CAAC,EAC9B;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG,CAAC;IAElC,CAAC;EACH;EAEAC,MAAM,GAAG;IACP,oBACE,oBAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACH,oBAAC,WAAW;MACV,IAAI,EAAE,IAAI,CAACJ,KAAK,CAACC,IAAK;MACtB,KAAK,EAAE,SAAU;MACjB,KAAK,EAAE,GAAI;MACX,MAAM,EAAE,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACZ,CACG;EAEX;AACF;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}