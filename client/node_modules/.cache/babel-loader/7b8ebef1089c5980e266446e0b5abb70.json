{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\FunnelGraphExample.tsx\";\nconst FunnelGraphExample = _ref => {\n  let {\n    data\n  } = _ref;\n  const containerRef = useRef(null);\n  const graphData = {\n    labels: ['Impressions', 'Add To Cart', 'Buy'],\n    subLabels: ['Direct', 'Social Media', 'Ads'],\n    colors: [['#FFB178', '#FF78B1', '#FF3C8E'], 'red', ['blue']],\n    values: [[2000, 4000, 6000], [3000, 1000, 1700], [200, 30, 130]]\n  };\n  useEffect(() => {\n    if (containerRef.current && graphData) {\n      const graph = new FunnelGraph({\n        container: containerRef.current,\n        gradientDirection: 'horizontal',\n        data: graphData,\n        displayPercent: true,\n        direction: 'horizontal'\n      });\n      graph.draw();\n    }\n  }, [graphData, containerRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    style: {\n      height: '300px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"names":["FunnelGraphExample","data","containerRef","useRef","graphData","labels","subLabels","colors","values","useEffect","current","graph","FunnelGraph","container","gradientDirection","displayPercent","direction","draw","height","width"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/FunnelGraphExample.tsx"],"sourcesContent":["const FunnelGraphExample: React.FC<FunnelGraphExampleProps> = ({ data }) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const graphData = {\r\n    labels: ['Impressions', 'Add To Cart', 'Buy'],\r\n    subLabels: ['Direct', 'Social Media', 'Ads'],\r\n    colors: [\r\n        ['#FFB178', '#FF78B1', '#FF3C8E'],\r\n        'red',\r\n        ['blue']\r\n    ],\r\n    values: [\r\n        [2000, 4000, 6000],\r\n        [3000, 1000, 1700],\r\n        [200, 30, 130]\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(containerRef.current && graphData) {\r\n      const graph = new FunnelGraph({\r\n          container: containerRef.current,\r\n          gradientDirection: 'horizontal',\r\n          data: graphData,\r\n          displayPercent: true,\r\n          direction: 'horizontal'\r\n      });\r\n      graph.draw();\r\n    }\r\n  }, [graphData, containerRef]);\r\n\r\n  return (\r\n    <div>\r\n        <div ref={containerRef} style={{ height: '300px', width: '100%' }}>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,MAAMA,kBAAqD,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACrE,MAAMC,YAAY,GAAGC,MAAM,CAAiB,IAAI,CAAC;EAEjD,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;IAC7CC,SAAS,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,KAAK,CAAC;IAC5CC,MAAM,EAAE,CACJ,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EACjC,KAAK,EACL,CAAC,MAAM,CAAC,CACX;IACDC,MAAM,EAAE,CACJ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;EAEpB,CAAC;EAEDC,SAAS,CAAC,MAAM;IACd,IAAGP,YAAY,CAACQ,OAAO,IAAIN,SAAS,EAAE;MACpC,MAAMO,KAAK,GAAG,IAAIC,WAAW,CAAC;QAC1BC,SAAS,EAAEX,YAAY,CAACQ,OAAO;QAC/BI,iBAAiB,EAAE,YAAY;QAC/Bb,IAAI,EAAEG,SAAS;QACfW,cAAc,EAAE,IAAI;QACpBC,SAAS,EAAE;MACf,CAAC,CAAC;MACFL,KAAK,CAACM,IAAI,EAAE;IACd;EACF,CAAC,EAAE,CAACb,SAAS,EAAEF,YAAY,CAAC,CAAC;EAE7B,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,GAAG,EAAEA,YAAa;IAAC,KAAK,EAAE;MAAEgB,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC5D,CACJ;AAEV,CAAC"},"metadata":{},"sourceType":"module"}