{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-graphql-master\\\\client\\\\src\\\\components\\\\funnel\\\\FunnelGraph.tsx\";\n// import * as FunnelGraphJs from 'funnel-graph-js';\n// import React, { useRef } from 'react';\n\n// interface FunnelGraphProps {\n//     data: { labels: string[], subLabels: string[], colors: any[], values: any[] };\n//     width: number;\n//     height: number;\n//     options?: FunnelGraphJs.FunnelGraphOptions;\n// }\n\n// const FunnelGraph: React.FC<FunnelGraphProps> = (props) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     const funnelGraph = useRef<FunnelGraphJs.FunnelGraph>();\n\n//     React.useEffect(() => {\n//         if(funnelGraph.current) {\n//             funnelGraph.current.update(props.data);\n//         } else {\n//             const options = {\n//                 ...props.options,\n//                 container: containerRef.current,\n//                 data: props.data,\n//                 width: props.width,\n//                 height: props.height\n//             }\n//             funnelGraph.current = new FunnelGraphJs.FunnelGraph(options);\n//             funnelGraph.current.draw();\n//         }\n//     }, [props.data, props.width, props.height, props.options]);\n\n//     return (\n//         <div ref={containerRef} style={{width: props.width, height: props.height}}></div>\n//     );\n// }\n\n// export default FunnelGraph;\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Platform } from \"react-native\";\nimport FusionCharts from \"react-native-fusioncharts\";\nconst dataSource = {\n  chart: {\n    caption: \"Website visits\",\n    subcaption: \"Purchase - Conversion analysis for last year\",\n    decimals: \"1\",\n    showvalues: \"1\",\n    plottooltext: \"$label: <b>$dataValue</b>\",\n    plotfillalpha: \"70\",\n    theme: \"fusion\",\n    streamlineddata: \"0\"\n  },\n  data: [{\n    label: \"Website Visits\",\n    value: \"17362\"\n  }, {\n    label: \"Downloads\",\n    value: \"8039\"\n  }, {\n    label: \"Checked Pricing\",\n    value: \"5509\"\n  }, {\n    label: \"Asked for Quotation\",\n    value: \"3962\"\n  }, {\n    label: \"Purchased\",\n    value: \"2397\"\n  }]\n};\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.libraryPath = void 0;\n    this.state = dataSource;\n    this.libraryPath = Platform.select({\n      // Specify fusioncharts.html file location\n      ios: require(\"./assets/fusioncharts.html\"),\n      android: {\n        uri: \"file:///android_asset/fusioncharts.html\"\n      }\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: styles.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"FusionCharts Integration with React Native\"), /*#__PURE__*/React.createElement(View, {\n      style: styles.chartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FusionCharts, {\n      type: this.state.type,\n      width: this.state.width,\n      height: this.state.height,\n      dataFormat: this.state.dataFormat,\n      dataSource: this.state.dataSource,\n      libraryPath: this.libraryPath // set the libraryPath property\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  heading: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  chartContainer: {\n    height: 200\n  }\n});\n\n// skip this line if using Create React Native App\n// AppRegistry.registerComponent(\"ReactNativeFusionCharts\", () => App);","map":{"version":3,"names":["React","Component","StyleSheet","Text","View","Platform","FusionCharts","dataSource","chart","caption","subcaption","decimals","showvalues","plottooltext","plotfillalpha","theme","streamlineddata","data","label","value","App","constructor","props","libraryPath","state","select","ios","require","android","uri","render","styles","container","heading","chartContainer","type","width","height","dataFormat","create","flex","padding","fontSize","textAlign","marginBottom"],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/FunnelGraph.tsx"],"sourcesContent":["// import * as FunnelGraphJs from 'funnel-graph-js';\r\n// import React, { useRef } from 'react';\r\n\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: { labels: string[], subLabels: string[], colors: any[], values: any[] };\r\n//     width: number;\r\n//     height: number;\r\n//     options?: FunnelGraphJs.FunnelGraphOptions;\r\n// }\r\n\r\n// const FunnelGraph: React.FC<FunnelGraphProps> = (props) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     const funnelGraph = useRef<FunnelGraphJs.FunnelGraph>();\r\n\r\n//     React.useEffect(() => {\r\n//         if(funnelGraph.current) {\r\n//             funnelGraph.current.update(props.data);\r\n//         } else {\r\n//             const options = {\r\n//                 ...props.options,\r\n//                 container: containerRef.current,\r\n//                 data: props.data,\r\n//                 width: props.width,\r\n//                 height: props.height\r\n//             }\r\n//             funnelGraph.current = new FunnelGraphJs.FunnelGraph(options);\r\n//             funnelGraph.current.draw();\r\n//         }\r\n//     }, [props.data, props.width, props.height, props.options]);\r\n\r\n//     return (\r\n//         <div ref={containerRef} style={{width: props.width, height: props.height}}></div>\r\n//     );\r\n// }\r\n\r\n// export default FunnelGraph;\r\nimport React, { Component } from \"react\";\r\nimport { AppRegistry, StyleSheet, Text, View, Platform } from \"react-native\";\r\nimport FusionCharts from \"react-native-fusioncharts\";\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Website visits\",\r\n    subcaption: \"Purchase - Conversion analysis for last year\",\r\n    decimals: \"1\",\r\n    showvalues: \"1\",\r\n    plottooltext: \"$label: <b>$dataValue</b>\",\r\n    plotfillalpha: \"70\",\r\n    theme: \"fusion\",\r\n    streamlineddata: \"0\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Website Visits\",\r\n      value: \"17362\"\r\n    },\r\n    {\r\n      label: \"Downloads\",\r\n      value: \"8039\"\r\n    },\r\n    {\r\n      label: \"Checked Pricing\",\r\n      value: \"5509\"\r\n    },\r\n    {\r\n      label: \"Asked for Quotation\",\r\n      value: \"3962\"\r\n    },\r\n    {\r\n      label: \"Purchased\",\r\n      value: \"2397\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default class App extends Component {\r\n  libraryPath: any;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = dataSource;\r\n\r\n    this.libraryPath = Platform.select({\r\n      // Specify fusioncharts.html file location\r\n      ios: require(\"./assets/fusioncharts.html\"),\r\n      android: { uri: \"file:///android_asset/fusioncharts.html\" }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>\r\n          FusionCharts Integration with React Native\r\n        </Text>\r\n        <View style={styles.chartContainer}>\r\n          <FusionCharts\r\n            type={this.state.type}\r\n            width={this.state.width}\r\n            height={this.state.height}\r\n            dataFormat={this.state.dataFormat}\r\n            dataSource={this.state.dataSource}\r\n            libraryPath={this.libraryPath} // set the libraryPath property\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10\r\n  },\r\n  heading: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    marginBottom: 10\r\n  },\r\n  chartContainer: {\r\n    height: 200\r\n  }\r\n});\r\n\r\n// skip this line if using Create React Native App\r\n// AppRegistry.registerComponent(\"ReactNativeFusionCharts\", () => App);\r\n"],"mappings":";AAAA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAsBC,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,cAAc;AAC5E,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE;IACLC,OAAO,EAAE,gBAAgB;IACzBC,UAAU,EAAE,8CAA8C;IAC1DC,QAAQ,EAAE,GAAG;IACbC,UAAU,EAAE,GAAG;IACfC,YAAY,EAAE,2BAA2B;IACzCC,aAAa,EAAE,IAAI;IACnBC,KAAK,EAAE,QAAQ;IACfC,eAAe,EAAE;EACnB,CAAC;EACDC,IAAI,EAAE,CACJ;IACEC,KAAK,EAAE,gBAAgB;IACvBC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,qBAAqB;IAC5BC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE;EACT,CAAC;AAEL,CAAC;AAED,eAAe,MAAMC,GAAG,SAASnB,SAAS,CAAC;EAEzCoB,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAFfC,WAAW;IAIT,IAAI,CAACC,KAAK,GAAGjB,UAAU;IAEvB,IAAI,CAACgB,WAAW,GAAGlB,QAAQ,CAACoB,MAAM,CAAC;MACjC;MACAC,GAAG,EAAEC,OAAO,CAAC,4BAA4B,CAAC;MAC1CC,OAAO,EAAE;QAAEC,GAAG,EAAE;MAA0C;IAC5D,CAAC,CAAC;EACJ;EAEAC,MAAM,GAAG;IACP,oBACE,oBAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC5B,oBAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,4CAE7B,CAAO,eACP,oBAAC,IAAI;MAAC,KAAK,EAAEF,MAAM,CAACG,cAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACjC,oBAAC,YAAY;MACX,IAAI,EAAE,IAAI,CAACV,KAAK,CAACW,IAAK;MACtB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACY,KAAM;MACxB,MAAM,EAAE,IAAI,CAACZ,KAAK,CAACa,MAAO;MAC1B,UAAU,EAAE,IAAI,CAACb,KAAK,CAACc,UAAW;MAClC,UAAU,EAAE,IAAI,CAACd,KAAK,CAACjB,UAAW;MAClC,WAAW,EAAE,IAAI,CAACgB,WAAY,CAAC;MAAA;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC/B,CACG,CACF;EAEX;AACF;AAEA,MAAMQ,MAAM,GAAG7B,UAAU,CAACqC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDR,OAAO,EAAE;IACPS,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDV,cAAc,EAAE;IACdG,MAAM,EAAE;EACV;AACF,CAAC,CAAC;;AAEF;AACA"},"metadata":{},"sourceType":"module"}