{"ast":null,"code":"// import * as FunnelGraphJs from 'funnel-graph-js';\n// import React, { useRef } from 'react';\n\n// interface FunnelGraphProps {\n//     data: { labels: string[], subLabels: string[], colors: any[], values: any[] };\n//     width: number;\n//     height: number;\n//     options?: FunnelGraphJs.FunnelGraphOptions;\n// }\n\n// const FunnelGraph: React.FC<FunnelGraphProps> = (props) => {\n//     const containerRef = useRef<HTMLDivElement>(null);\n//     const funnelGraph = useRef<FunnelGraphJs.FunnelGraph>();\n\n//     React.useEffect(() => {\n//         if(funnelGraph.current) {\n//             funnelGraph.current.update(props.data);\n//         } else {\n//             const options = {\n//                 ...props.options,\n//                 container: containerRef.current,\n//                 data: props.data,\n//                 width: props.width,\n//                 height: props.height\n//             }\n//             funnelGraph.current = new FunnelGraphJs.FunnelGraph(options);\n//             funnelGraph.current.draw();\n//         }\n//     }, [props.data, props.width, props.height, props.options]);\n\n//     return (\n//         <div ref={containerRef} style={{width: props.width, height: props.height}}></div>\n//     );\n// }\n\n// export default FunnelGraph;","map":{"version":3,"names":[],"sources":["D:/react-typescript-graphql-master/client/src/components/funnel/FunnelGraph.tsx"],"sourcesContent":["// import * as FunnelGraphJs from 'funnel-graph-js';\r\n// import React, { useRef } from 'react';\r\n\r\n\r\n\r\n// interface FunnelGraphProps {\r\n//     data: { labels: string[], subLabels: string[], colors: any[], values: any[] };\r\n//     width: number;\r\n//     height: number;\r\n//     options?: FunnelGraphJs.FunnelGraphOptions;\r\n// }\r\n\r\n// const FunnelGraph: React.FC<FunnelGraphProps> = (props) => {\r\n//     const containerRef = useRef<HTMLDivElement>(null);\r\n//     const funnelGraph = useRef<FunnelGraphJs.FunnelGraph>();\r\n\r\n//     React.useEffect(() => {\r\n//         if(funnelGraph.current) {\r\n//             funnelGraph.current.update(props.data);\r\n//         } else {\r\n//             const options = {\r\n//                 ...props.options,\r\n//                 container: containerRef.current,\r\n//                 data: props.data,\r\n//                 width: props.width,\r\n//                 height: props.height\r\n//             }\r\n//             funnelGraph.current = new FunnelGraphJs.FunnelGraph(options);\r\n//             funnelGraph.current.draw();\r\n//         }\r\n//     }, [props.data, props.width, props.height, props.options]);\r\n\r\n//     return (\r\n//         <div ref={containerRef} style={{width: props.width, height: props.height}}></div>\r\n//     );\r\n// }\r\n\r\n// export default FunnelGraph;\r\n\r\n"],"mappings":"AAAA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}